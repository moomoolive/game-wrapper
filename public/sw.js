"use strict";(()=>{var u="app-v1";var p=t=>{let{rootDoc:s,cache:e}=t;return async o=>{if(o.request.url!==s){let n=await(await e).match(o.request);return n&&n.ok?o.respondWith(n):void 0}try{let n=await fetch(o.request);return o.respondWith(n)}catch(n){let l=await(await e).match(o.request);return l&&l.ok?o.respondWith(l):o.respondWith(new Response("",{status:500,statusText:"Internal Server Error",headers:{"Sw-Net-Err":String(n)||"1"}}))}}};var i=globalThis.self,g=i.location.origin+"/",c=g+"__sw-config__.json",r={log:!0,savedAt:-1},f=caches.open(u).then(async t=>{let s=await t.match(c);if(!s)return h(Promise.resolve(t)),t;let e=await s.json();return r.log=e.log??!0,r.savedAt=e.savedAt||-1,t}),h=async t=>(r.savedAt=Date.now(),(await t).put(c,new Response(JSON.stringify(r),{status:200,statusText:"OK"}))),w=async(t,s,e="all")=>{let o=e==="all"||!e?await i.clients.matchAll({}):(n=>n?[n]:[])(await i.clients.get(e));for(let n of o)n.postMessage({type:t,contents:s})},a=(t,s="all",e=!1)=>{if(!r.log||e)return w("info",t,s)},m=(t,s="all")=>w("error",t,s);i.oninstall=t=>t.waitUntil(i.skipWaiting());i.onactivate=t=>{t.waitUntil((async()=>{await i.clients.claim(),a("{\u{1F4E5} install} new script installed","all",!0),a(`{\u{1F525} activate} new script in control, started with args: silent_log=${r.log}`,"all",!0)})())};i.onfetch=p({cache:f,rootDoc:g});var d={"config:silent_logs":()=>{r.log=!0},"config:verbose_logs":()=>{r.log=!1},"list:consts":t=>{a(`listed constants: config_file_url=${c}, ROOT_DOC=${g}`,t,!0)},"list:connected_clients":async t=>{let s=await i.clients.matchAll();a(`connected clients (${s.length}): ${s.map(e=>`(id=${e.id||"unknown"}, url=${e.url}, type=${e.type})
`).join(",")}`,t,!0)},"list:config":t=>{a(`config: ${JSON.stringify(r)}`,t,!0)}};i.onmessage=async t=>{let s=t.data,e=t.source.id;if(!d[s?.action]){m(`received incorrectly encoded message ${t.data}`,e);return}await d[s.action](e),s.action.startsWith("config:")&&(h(f),a(`persisted new config @ ${c}`))};})();
