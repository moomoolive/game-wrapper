"use strict";(()=>{var l=(e,t,s)=>new Promise((c,r)=>{var g=n=>{try{o(s.next(n))}catch(u){r(u)}},d=n=>{try{o(s.throw(n))}catch(u){r(u)}},o=n=>n.done?c(n.value):Promise.resolve(n.value).then(g,d);o((s=s.apply(e,t)).next())});var i=globalThis.self,f=e=>e==null?[]:[e],a={silent:!0,info(e,t="all",s=!1){if(s||!this.silent)return this.msgAll("info",e,t)},error(e,t="all"){return this.msgAll("error",e,t)},msgAll(e,t,s="all"){return l(this,null,function*(){let c=s==="all"?yield i.clients.matchAll({}):f(yield i.clients.get(s));for(let r of c)r.postMessage({type:e,contents:t})})}};i.addEventListener("message",e=>{let t=e.data;if(!t||typeof t.action!="string"){a.error("received incorrectly encoded message from client");return}let{action:s}=t;switch(s){case"silence-logs":a.silent=!0;break;case"verbose-logs":a.silent=!1;break}});i.addEventListener("install",e=>{e.waitUntil(Promise.all([i.skipWaiting()]))});i.addEventListener("activate",e=>{e.waitUntil((()=>l(void 0,null,function*(){yield i.clients.claim(),yield a.info("{\u{1F4E5} install} new script installed","all",!0),yield a.info(`{\u{1F525} activate} new script in control, started with args: silent_log=${a.silent}`,"all",!0)}))())});i.addEventListener("fetch",e=>{e.respondWith((()=>l(void 0,null,function*(){let t=yield caches.match(e.request);return a.info(`recieved client ${e.clientId} request for ${e.request.url}, cache_hit=${!!t}, status=${(t==null?void 0:t.status)||"no_status"}`,e.clientId),t||fetch(e.request)}))())});})();
